<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>